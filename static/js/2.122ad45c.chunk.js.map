{"version":3,"file":"static/js/2.122ad45c.chunk.js","mappings":"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","sources":["constants/theme.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["const theme = {\n  colors: {\n    dark: '#0B0C10',\n    mainGrey: '#1F2833',\n    textGrey: '#C5C6C7',\n    accent: '#66FCF1',\n    secondAccent: '#45A29E',\n    white: '#fff',\n    lightGreen: '#33ee7e',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport theme from 'constants/theme';\n\nconst { colors } = theme;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-self: start;\n\n  padding: 30px;\n\n  background-image: linear-gradient(\n    to bottom,\n    ${colors.dark} 20%,\n    ${colors.mainGrey}\n  );\n  color: #c5c6c7;\n  box-shadow: 2px 2px 10px black;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n  cursor: default;\n\n  color: ${colors.accent};\n  text-shadow: 3px 3px 3px ${colors.mainGrey}, 5px 5px 5px ${colors.textGrey};\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nexport const FormLabel = styled.label`\n  text-align: start;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LabelTitle = styled.span`\n  display: inline-block;\n  color: ${colors.secondAccent};\n  margin: 10px 0;\n`;\n\nexport const FormInput = styled.input`\n  box-sizing: border-box;\n  width: 420px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  width: 180px;\n\n  margin: 20px auto 10px;\n  padding: 10px;\n\n  background-color: ${colors.textGrey};\n\n  color: ${colors.mainGrey};\n  border-radius: 10px;\n  box-shadow: -2px -2px 5px ${colors.dark};\n\n  font-size: 18px;\n  font-weight: bold;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.secondAccent};\n  }\n  &:active {\n    box-shadow: 2px 2px 5px ${colors.dark};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix';\n\nimport { addData } from '../../redux/phonebook/phonebookOperations';\nimport {\n  ContactForm,\n  Title,\n  FormLabel,\n  LabelTitle,\n  FormInput,\n  AddButton,\n} from './Form.styled';\n\nconst Form = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  let inputNumber;\n  let inputName;\n\n  const handleInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        inputName = value;\n        break;\n      case 'number':\n        inputNumber = value;\n        break;\n      default:\n        break;\n    }\n  };\n\n  const checkExistData = () => {\n    const names = contacts.map(contact => {\n      if (contact.name) {\n        return contact.name.toLowerCase();\n      } else return contact;\n    });\n\n    const numbers = contacts.map(contact => {\n      if (contact.number) {\n        return contact.number;\n      } else return contact;\n    });\n\n    if (inputName) {\n      if (names.includes(inputName.toLowerCase())) {\n        Notify.info(`Please, enter unique name. ${inputName} is already exist`);\n        return;\n      } else if (numbers.includes(inputNumber)) {\n        Notify.info(\n          `Please, enter unique number. ${inputNumber} is already exist`\n        );\n        return;\n      } else {\n        return { name: inputName, number: inputNumber };\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = checkExistData();\n    if (contact) {\n      dispatch(addData(contact));\n      e.currentTarget.reset();\n    } else {\n      Notify.failure('Contact not added. Please, try again ))');\n    }\n  };\n\n  return (\n    <ContactForm\n      name=\"addContactForm\"\n      autocomplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Title>Add new contact</Title>\n      <FormLabel>\n        <LabelTitle>Name</LabelTitle>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleInput}\n          value={inputName}\n          required\n        />\n      </FormLabel>\n\n      <FormLabel>\n        <LabelTitle>Number</LabelTitle>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleInput}\n          value={inputNumber}\n          minlength=\"7\"\n          required\n        />\n      </FormLabel>\n\n      <AddButton type=\"submit\">+ Add</AddButton>\n    </ContactForm>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\nimport theme from 'constants/theme';\n\nconst { colors } = theme;\n\nexport const FilterLabel = styled.label`\n  display: block;\n  font-style: italic;\n  color: ${colors.textGrey};\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin: 10px auto;\n  width: 420px;\n  padding: 10px;\n\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux/es/exports';\nimport { onFilter } from 'redux/phonebook/phonebookActions';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(onFilter(e.currentTarget.value.toLowerCase().trim()));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={value} onChange={handleFilter} />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport theme from 'constants/theme';\n\nconst { colors } = theme;\n\nexport const Contacts = styled.div`\n  width: 40vw;\n  height: 100%;\n  padding: 30px;\n\n  background-image: linear-gradient(\n    to bottom,\n    ${colors.dark} 50%,\n    ${colors.mainGrey}\n  );\n\n  box-shadow: 2px 2px 10px black;\n  border-radius: 10px;\n\n  cursor: default;\n`;\n\nexport const ListTitle = styled.h2`\n  margin: 0 0 30px;\n  color: ${colors.accent};\n  text-shadow: 3px 3px 3px ${colors.mainGrey}, 5px 5px 5px ${colors.textGrey};\n  font-size: 32px;\n`;\n\nexport const List = styled.ul`\n  color: ${colors.textGrey};\n`;\n\nexport const Contact = styled.li`\n  list-style: square;\n  display: flex;\n  text-align: start;\n\n  margin-bottom: 7px;\n`;\nexport const Marker = styled.span`\n  margin-right: 10px;\n  color: ${colors.secondAccent};\n`;\nexport const ContactName = styled.span`\n  display: inline-flex;\n  margin-right: 15px;\n\n  font-weight: bold;\n`;\n\nexport const ContactNumber = styled.span`\n  color: ${colors.white};\n\n  font-style: italic;\n`;\n\nexport const DeleteButton = styled.span`\n  align-self: flex-end;\n  margin-left: auto;\n  padding: 5px;\n\n  background-color: ${colors.textGrey};\n  color: ${colors.mainGrey};\n  font-size: 12px;\n  border-radius: 5px;\n  border: 1px solid ${colors.mainGrey};\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear, box-shadow 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: ${colors.secondAccent};\n  }\n  &:active {\n    box-shadow: 2px 2px 5px ${colors.dark};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData, removeData } from '../../redux/phonebook/phonebookOperations';\n\nimport Filter from '../Filter';\n\nimport {\n  Contacts,\n  List,\n  ListTitle,\n  Contact,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n  Marker,\n} from './ContactsList.styled';\n\nconst ContactsList = ({ title }) => {\n  const contactsList = useSelector(state => state.contacts.items);\n  const filterValue = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const getFilteresContacts = filterValue => {\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n  const filteredContacts = getFilteresContacts(filterValue);\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  return (\n    <Contacts>\n      <ListTitle>{title}</ListTitle>\n      <Filter />\n      <List>\n        {filteredContacts.map(contact => (\n          <Contact key={contact.id}>\n            <Marker>&#9742; </Marker>\n            <ContactName>{contact.name}: </ContactName>\n            <ContactNumber>{contact.number}</ContactNumber>\n            <DeleteButton\n              type=\"button\"\n              onClick={() => {\n                dispatch(removeData(contact.id));\n              }}\n            >\n              x Delete\n            </DeleteButton>\n          </Contact>\n        ))}\n      </List>\n    </Contacts>\n  );\n};\n\nContactsList.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nimport theme from 'constants/theme';\n\nconst { colors } = theme;\n\nexport const Container = styled.div`\n  background-color: ${colors.dark};\n  padding: 70px 50px;\n  height: 70vh;\n`;\n\nexport const BookContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 120px;\n  width: 90vw;\n\n  margin: 30px auto;\n  padding-top: 20px;\n\n  overflow: hidden;\n`;\n","import React from 'react';\n\nimport Form from 'components/Form';\nimport ContactsList from 'components/ContactsList';\n\nimport { Container, BookContainer } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Container>\n      <BookContainer>\n        <Form />\n        <ContactsList title={'Contacts'} />\n      </BookContainer>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["colors","dark","mainGrey","textGrey","accent","secondAccent","white","lightGreen","theme","ContactForm","styled","Title","FormLabel","LabelTitle","FormInput","AddButton","inputNumber","inputName","contacts","useSelector","state","items","dispatch","useDispatch","handleInput","e","currentTarget","name","value","autocomplete","onSubmit","preventDefault","contact","names","map","toLowerCase","numbers","number","includes","Notify","checkExistData","addData","reset","type","pattern","title","onChange","required","minlength","FilterLabel","FilterInput","filter","onFilter","trim","Contacts","ListTitle","List","Contact","Marker","ContactName","ContactNumber","DeleteButton","contactsList","filterValue","filteredContacts","getFilteresContacts","useEffect","getData","onClick","removeData","id","Container","BookContainer"],"sourceRoot":""}