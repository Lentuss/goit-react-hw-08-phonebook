{"version":3,"file":"static/js/817.666aba0e.chunk.js","mappings":"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","sources":["constants/theme.js","pages/Home/Home.styled.js","components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["const theme = {\n  colors: {\n    dark: '#0B0C10',\n    mainGrey: '#1F2833',\n    textGrey: '#C5C6C7',\n    accent: '#66FCF1',\n    secondAccent: '#45A29E',\n    white: '#fff',\n    lightGreen: '#33ee7e',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const Video = styled.video`\n  width: 100%;\n`;\n\nexport const Message = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 700px;\n  margin: 0 auto;\n  padding: 30px;\n\n  font-size: 46px;\n  color: #c5c6c7;\n`;\n","import styled from 'styled-components';\nimport theme from '../../constants/theme';\n\nconst { colors } = theme;\n\nexport const Form = styled.form`\n  position: absolute;\n  top: 180px;\n  left: ${({ page }) => (page === '/register' ? '110px' : '110px')};\n  ///////////////////////////////////////////////////////////////////////\n\n  transform: translateX(${({ page }) => (page === '/register' ? '100%' : '0')});\n\n  transition: transform 2000ms linear;\n  /////////////////////////////////////////////////////////////////////////////\n  display: flex;\n  flex-direction: column;\n\n  padding: 30px;\n\n  color: #c5c6c7;\n  box-shadow: 2px 2px 10px black;\n  border: 2px solid white;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n  cursor: default;\n\n  color: white;\n  text-shadow: 3px 3px 3px ${colors.mainGrey}, 5px 5px 5px ${colors.textGrey};\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nexport const FormLabel = styled.label`\n  text-align: start;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LabelTitle = styled.span`\n  display: inline-block;\n  color: ${colors.white};\n  margin: 10px 0;\n`;\n\nexport const FormInput = styled.input`\n  box-sizing: border-box;\n  width: 420px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 180px;\n\n  margin: 20px auto 10px;\n  padding: 10px;\n\n  background-color: ${colors.textGrey};\n\n  color: ${colors.mainGrey};\n  border-radius: 10px;\n  box-shadow: -2px -2px 5px ${colors.dark};\n\n  font-size: 18px;\n  font-weight: bold;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.lightGreen};\n  }\n  &:active {\n    box-shadow: 2px 2px 5px ${colors.dark};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Title,\n  FormLabel,\n  LabelTitle,\n  FormInput,\n  Button,\n} from './AuthForm.styled';\n\nconst AuthForm = ({ text, page, onSubmit }) => {\n  //   let inputName;\n  //   let inputEmail;\n  //   let inputPassword;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        console.log(value);\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        console.log(value);\n\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  //   const handleInput = e => {\n  //     const { name, value } = e.currentTarget;\n  //     switch (name) {\n  //       case 'name':\n  //         inputName = value;\n  //         break;\n  //       case 'email':\n  //         inputEmail = value;\n  //         break;\n  //       case 'password':\n  //         inputPassword = value;\n  //         break;\n\n  //       default:\n  //         break;\n  //     }\n  //   };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, email, password);\n    // setName('');\n    // setEmail('');\n    // setPassword('');\n  };\n  return (\n    <Form\n      name=\"logInForm\"\n      autocomplete=\"off\"\n      page={page}\n      onSubmit={handleSubmit}\n    >\n      <Title>{text}</Title>\n      {page === '/register' && (\n        <FormLabel>\n          <LabelTitle>Name</LabelTitle>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я ]+((['-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            onChange={handleInput}\n            value={name}\n            minlength=\"2\"\n            required\n          />\n        </FormLabel>\n      )}\n      <FormLabel>\n        <LabelTitle>E-mail</LabelTitle>\n        <FormInput\n          type=\"text\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          minlength=\"3\"\n          title=\"Email may contain numbers, letters. For example Adrian81@mail.com\"\n          onChange={handleInput}\n          value={email}\n          required\n        />\n      </FormLabel>\n\n      <FormLabel>\n        <LabelTitle>Password</LabelTitle>\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          //   pattern=\"[a-z]{1,15}\"\n          pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\n          title=\"Password must contain at least one lowercase letter, at least one uppercase letter, at least one numeric value and at least one special symbol\"\n          onChange={handleInput}\n          value={password}\n          minlength={8}\n          maxLength={10}\n          required\n        />\n      </FormLabel>\n\n      <Button type=\"submit\">\n        {page === '/register' ? 'Create account' : 'Log In'}\n      </Button>\n    </Form>\n  );\n};\n\nAuthForm.propTypes = {\n  text: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport AuthForm from 'components/AuthForm';\nimport { register } from 'redux/auth/authOperations';\nimport { Container, Video } from 'pages/Home/Home.styled';\nimport videoLayout from '../../assets/video/videoLayout.mp4';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const page = useLocation().pathname;\n\n  const getData = (name, email, password) => {\n    dispatch(register({ name, email, password }));\n    console.log('name ', name, 'email ', email, 'password', password);\n  };\n\n  return (\n    <Container>\n      <Video src={videoLayout} autoPlay muted loop></Video>;\n      <AuthForm page={page} text={'Create a new account'} onSubmit={getData} />\n    </Container>\n  );\n};\n\nexport default Register;\n"],"names":["colors","dark","mainGrey","textGrey","accent","secondAccent","white","lightGreen","Container","styled","Video","Message","theme","Form","page","Title","FormLabel","LabelTitle","FormInput","Button","text","onSubmit","useState","name","setName","email","setEmail","password","setPassword","handleInput","e","currentTarget","value","console","log","autocomplete","preventDefault","type","pattern","title","onChange","minlength","required","maxLength","dispatch","useDispatch","useLocation","pathname","src","videoLayout","autoPlay","muted","loop","register"],"sourceRoot":""}